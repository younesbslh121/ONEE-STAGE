from marshmallow import Schema, fields, validate

class MissionSchema(Schema):
    id = fields.Int(dump_only=True)
    title = fields.Str(required=True, validate=validate.Length(min=1, max=200))
    description = fields.Str()
    status = fields.Str(validate=validate.OneOf(['pending', 'in_progress', 'completed', 'cancelled']))
    priority = fields.Str(validate=validate.OneOf(['low', 'medium', 'high', 'urgent']))
    start_latitude = fields.Float(required=True)
    start_longitude = fields.Float(required=True)
    start_address = fields.Str()
    end_latitude = fields.Float(required=True)
    end_longitude = fields.Float(required=True)
    end_address = fields.Str()
    scheduled_start = fields.DateTime(required=True)
    scheduled_end = fields.DateTime(required=True)
    actual_start = fields.DateTime()
    actual_end = fields.DateTime()
    assigned_user_id = fields.Int(required=True)
    vehicle_id = fields.Int(required=True)
    created_by = fields.Int(required=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)

class MissionCreateSchema(Schema):
    title = fields.Str(required=True, validate=validate.Length(min=1, max=200))
    description = fields.Str()
    priority = fields.Str(validate=validate.OneOf(['low', 'medium', 'high', 'urgent']), load_default='medium')
    start_latitude = fields.Float(required=True)
    start_longitude = fields.Float(required=True)
    start_address = fields.Str()
    end_latitude = fields.Float(required=True)
    end_longitude = fields.Float(required=True)
    end_address = fields.Str()
    scheduled_start = fields.DateTime(required=True)
    scheduled_end = fields.DateTime(required=True)
    assigned_user_id = fields.Int(required=True)
    vehicle_id = fields.Int(required=True)
